"use strict";exports.__esModule=true;exports.default=void 0;var _webpackSources=require("webpack-sources");var _constants=require("../../lib/constants");// This plugin creates a pages-manifest.json from page entrypoints.
// This is used for mapping paths like `/` to `.next/server/static/<buildid>/pages/index.js` when doing SSR
// It's also used by next export to provide defaultPathMap
class PagesManifestPlugin{apply(compiler){compiler.hooks.emit.tap('HachiPagesManifest',compilation=>{const{chunks}=compilation;const pages={};for(const chunk of chunks){const result=_constants.ROUTE_NAME_REGEX.exec(chunk.name);if(!result){continue;}const pagePath=result[1];if(!pagePath){continue;}if(pages[`/${pagePath.replace(/\\/g,'/')}`]){pages[`/${pagePath.replace(/\\/g,'/')}`].push(chunk.name.replace(/\\/g,'/')+'.js');}else{pages[`/${pagePath.replace(/\\/g,'/')}`]=[chunk.name.replace(/\\/g,'/')+'.js'];}}if(typeof pages['/index']!=='undefined'){pages['/']=pages['/index'];}compilation.assets[_constants.PAGES_MANIFEST]=new _webpackSources.RawSource(JSON.stringify(pages));});}}exports.default=PagesManifestPlugin;