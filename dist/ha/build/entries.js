"use strict";exports.__esModule=true;exports.createPagesMapping=createPagesMapping;exports.createEntrypoints=createEntrypoints;var _chalk=_interopRequireDefault(require("chalk"));var _path=require("path");var _querystring=require("querystring");var _constants=require("../lib/constants");var _normalizePagePath=require("../lib/normalize-page-path");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function createPagesMapping(pagePaths,extensions){const previousPages={};const pages=pagePaths.reduce((result,pagePath)=>{let page=`${pagePath.replace(new RegExp(`\\.+(${extensions.join('|')})$`),'').replace(/\\/g,'/')}`.replace(/\/index$/,'');page=page==='/index'?'/':page;const pageKey=page===''?'/':page;if(pageKey in result){warn(`Duplicate page detected. ${_chalk.default.cyan((0,_path.join)('pages',previousPages[pageKey]))} and ${_chalk.default.cyan((0,_path.join)('pages',pagePath))} both resolve to ${_chalk.default.cyan(pageKey)}.`);}else{previousPages[pageKey]=pagePath;}result[pageKey]=(0,_path.join)(_constants.PAGES_DIR_ALIAS,pagePath).replace(/\\/g,'/');return result;},{});pages['/_app']=pages['/_app']||'next/dist/pages/_app';pages['/_error']=pages['/_error']||'next/dist/pages/_error';pages['/_document']=pages['/_document']||'next/dist/pages/_document';return pages;}function createEntrypoints(mappedPages){const dynamicEntry={};// for (const url in mappedPages) {
//   if (BLOCKED_PAGES_REG.test(url)) {
//     dynamicEntry[url] = mappedPages[url];
//   }
// }
return{client:{client:(0,_path.join)(__dirname,'../client/index.js')},server:{server:(0,_path.join)(__dirname,'../server/ssr.js'),...dynamicEntry}};}