{"version":3,"sources":["babel-config.js"],"names":["babelClientOpts","presets","useBuiltIns","plugins","loose","overrides","test","require","default","babelServerOpts","modules","targets","node","exclude"],"mappings":"4FAAO,KAAMA,CAAAA,eAAe,CAAG,CAC3BC,OAAO,CAAE,CACP,0BADO,CAEP,CACE,mBADF,CAEE,CACE;AACF;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AAZF,CAFF,CAFO,CAmBP,CAAC,qBAAD,CAAwB,CAAEC,WAAW,CAAE,IAAf,CAAxB,CAnBO,CADkB,CAsB3BC,OAAO,CAAE,CACP;AACA;AACA,qCAHO,CAIP,CAAC,yCAAD,CAA4C,CAAEC,KAAK,CAAE,IAAT,CAA5C,CAJO,CAtBkB,CA4B3BC,SAAS,CAAE,CACT,CACEC,IAAI,CAAE,SADR,CAEEH,OAAO,CAAE,CAACI,OAAO,CAAC,0CAAD,CAAP,CAAoDC,OAArD,CAFX,CADS,CA5BgB,CAAxB,C,wCAoCA,KAAMC,CAAAA,eAAe,CAAG,CAC3BR,OAAO,CAAE,CACP,0BADO,CAEP,CAAC,qBAAD,CAAwB,CAAEC,WAAW,CAAE,IAAf,CAAxB,CAFO,CAGP,CACE,mBADF,CAEE,CACEQ,OAAO,CAAE,UADX,CAEEC,OAAO,CAAE,CACPC,IAAI,CAAE,KADC,CAFX,CAKER,KAAK,CAAE,IALT,CAMES,OAAO,CAAE,CACP,yBADO,CAEP,8BAFO,CAGP,kBAHO,CANX,CAFF,CAHO,CADkB,CAoB3BV,OAAO,CAAE,CACP,0CADO,CAEP,oDAFO,CAGP,qBAHO,CAIP,CAAC,yCAAD,CAA4C,CAAEC,KAAK,CAAE,IAAT,CAA5C,CAJO,CApBkB,CAAxB,C","sourcesContent":["export const babelClientOpts = {\n    presets: [\n      '@babel/preset-typescript',\n      [\n        '@babel/preset-env',\n        {\n          // modules: 'commonjs',\n        //   targets: {\n        //     esmodules: true,\n        //   },\n        //   bugfixes: true,\n        //   loose: true,\n        //   // This is handled by the Next.js webpack config that will run next/babel over the same code.\n          // exclude: [\n          //   'transform-typeof-symbol',\n          //   'transform-async-to-generator',\n          //   'transform-spread',\n          // ],\n        },\n      ],\n      ['@babel/preset-react', { useBuiltIns: true }],\n    ],\n    plugins: [\n      // workaround for @taskr/esnext bug replacing `-import` with `-require(`\n      // eslint-disable-next-line no-useless-concat\n      '@babel/plugin-syntax-dynamic-import',\n      ['@babel/plugin-proposal-class-properties', { loose: true }],\n    ],\n    overrides: [\n      {\n        test: /\\.tsx?$/,\n        plugins: [require('@babel/plugin-proposal-numeric-separator').default],\n      },\n    ],\n  }\n  \nexport const babelServerOpts = {\n    presets: [\n      '@babel/preset-typescript',\n      ['@babel/preset-react', { useBuiltIns: true }],\n      [\n        '@babel/preset-env',\n        {\n          modules: 'commonjs',\n          targets: {\n            node: '8.3',\n          },\n          loose: true,\n          exclude: [\n            'transform-typeof-symbol',\n            'transform-async-to-generator',\n            'transform-spread',\n          ],\n        },\n      ],\n    ],\n    plugins: [\n      '@babel/plugin-proposal-optional-chaining',\n      '@babel/plugin-proposal-nullish-coalescing-operator',\n      'dynamic-import-node',\n      ['@babel/plugin-proposal-class-properties', { loose: true }],\n    ],\n\n}"]}