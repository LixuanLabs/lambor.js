{"version":3,"sources":["compiler.js"],"names":["generateStats","result","stat","errors","warnings","toJson","length","push","devRunCompiler","clientConfig","serverConfig","clientDist","output","path","serverDist","serverMFS","MemoryFS","clientCompiler","serverCompiler","hotReloader","HotReloader","outputFileSystem","clientCompile","Promise","resolve","reject","hooks","done","tap","clientMFS","webpackDevMiddleware","fileSystem","entryFiles","JSON","parse","readFileSync","ENTRY_FILES","default","clientBundles","require","REACT_LOADABLE_MANIFEST","serverCompile","watch","err","Document","DOCUMENTJS","Ssr","SERVEROUTPUT","mfs","error","console","log","runCompiler","config","dev","multiCompiler","run","statsOrMultiStats","stats","reduce"],"mappings":"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","sourcesContent":["import webpack from 'webpack'\nimport path, { resolve } from 'path';\nimport MemoryFS from 'memory-fs';\nimport requireFromString from 'require-from-string';\nimport { REACT_LOADABLE_MANIFEST, SERVER_DIRECTORY, DOCUMENTJS, ENTRY_FILES, SERVEROUTPUT } from '../lib/constants';\nimport HotReloader from '../build/hot-reloader';\n\n\nfunction generateStats(result, stat) {\n  const { errors, warnings } = stat.toJson('errors-warnings')\n  if (errors.length > 0) {\n    result.errors.push(...errors)\n  }\n\n  if (warnings.length > 0) {\n    result.warnings.push(...warnings)\n  }\n\n  return result\n}\n\nexport async function devRunCompiler([clientConfig, serverConfig]) {\n  const clientDist = clientConfig.output.path;\n  const serverDist = serverConfig.output.path;\n  const serverMFS = new MemoryFS();\n  const clientCompiler = webpack(clientConfig);\n  const serverCompiler = webpack(serverConfig);\n  const hotReloader = new HotReloader([clientCompiler, serverCompiler]);\n  serverCompiler.outputFileSystem = serverMFS;\n  function clientCompile() {\n    return new Promise((resolve, reject) => {\n      clientCompiler.hooks.done.tap('done', () => {\n        const clientMFS = hotReloader.webpackDevMiddleware.fileSystem;\n        const entryFiles = JSON.parse(clientMFS.readFileSync(path.resolve(clientDist, ENTRY_FILES), 'utf-8')).default;\n        const clientBundles = require(path.resolve(clientDist, REACT_LOADABLE_MANIFEST));\n        resolve({\n          entryFiles,\n          clientBundles\n        });\n      })\n    })\n  }\n  function serverCompile() {\n    return new Promise((resolve, reject) => {\n      serverCompiler.watch({}, (err) => {\n        if (err) return reject(err);\n        const Document = requireFromString(serverMFS.readFileSync(path.resolve(serverDist, DOCUMENTJS), 'utf-8')).default;\n        const Ssr = requireFromString(serverMFS.readFileSync(path.resolve(serverDist, SERVEROUTPUT), 'utf-8')).default;\n        resolve({\n          Document,\n          Ssr\n        })\n      })\n    })\n  }\n  try {\n    const { entryFiles, clientBundles } = await clientCompile();\n    const { Document, Ssr } = await serverCompile();\n    return {\n      clientBundles,\n      Document,\n      entryFiles,\n      Ssr,\n      mfs: hotReloader.webpackDevMiddleware.fileSystem,\n      hotReloader\n    }  \n  } catch (error) {\n    console.log('error', error); \n  }\n}\n\nexport function runCompiler(\n  config,\n  {\n    dev = false\n  }\n) {\n  const multiCompiler = webpack(config)\n  return new Promise(async (resolve, reject) => {\n    multiCompiler.run(\n      (err, statsOrMultiStats) => {\n        if (err) {\n          return reject(err)\n        }\n\n        if ('stats' in statsOrMultiStats) {\n          const result = statsOrMultiStats.stats.reduce(\n            generateStats,\n            { errors: [], warnings: [] }\n          )\n          return resolve(result)\n        }\n\n        const result = generateStats(\n          { errors: [], warnings: [] },\n          statsOrMultiStats\n        )\n        return resolve(result)\n      }\n    )\n  })\n}\n"]}