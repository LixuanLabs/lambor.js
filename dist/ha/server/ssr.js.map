{"version":3,"sources":["ssr.js"],"names":["Ssr","constructor","dev","rootDir","distDir","Document","entryFiles","clientBundles","matchComponents","app","pathname","components","preload","routesList","map","routers","route","preloadFun","component","push","then","res","default","i","hasOwnProperty","Promise","all","catch","e","console","log","prepare","Loadable","run","req","parsedUrl","initDva","url","DApp","start","modules","C","module","bundles","html","renderDocument","page","files","children","err","code","statusCode","renderError","history","onError","message","router"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Loadable from 'react-loadable';\nimport dva from 'dva';\nimport { createMemoryHistory } from 'history';\nimport { matchRoutes } from 'react-router-config';\nimport { getBundles } from 'react-loadable/webpack';\nimport router from '../router';\nimport { generateRoutes } from '../lib/routes';\nimport { renderToString } from 'react-dom/server';\nimport { sendHTML, registerModel } from '../lib/utils';\n\nexport default class Ssr {\n    constructor({\n        dev,\n        rootDir,\n        distDir,\n        Document,\n        entryFiles,\n        clientBundles\n    }) {\n        this.dev = dev;\n        this.rootDir = rootDir;\n        this.distDir = distDir;\n        this.Document = Document;\n        this.entryFiles = entryFiles;\n        this.clientBundles = clientBundles;\n        this.Loadable = Loadable;\n        this.routesList = generateRoutes();\n    }\n\n    matchComponents = async (app, pathname) => {\n      // 组件匹配（包含Loadable组件）\n      const components = [];\n      const preload = [];\n      matchRoutes(this.routesList, pathname).map((routers) => {\n          const route = routers.route;\n          const preloadFun = route.component['preload'];\n          if (!preloadFun) {\n              components.push(route.component);\n          } else {\n              preload.push(preloadFun().then(res => {\n                  if (res.default) {\n                      components.push(res.default);\n                  } else {\n                      for (let i in res) {\n                          if (res.hasOwnProperty(i)) {\n                              if (res[i].default.hasOwnProperty('namespace')) {\n                                  registerModel(app, res[i]);\n                              } else {\n                                  components.push(res[i].default);\n                              }\n                          }\n                      }\n                  }\n              }));\n          }\n      });\n\n      await Promise.all(preload).catch((e) => {\n          console.log('matchComponents error:', e);\n\n      });\n      return components;\n      \n    }\n\n    prepare = async () => {\n        \n    }\n    \n    async run(\n        req,\n        res,\n        parsedUrl\n      ) {\n        this.initDva({url: req.url});\n        const app = this.app;\n        const DApp = app.start();\n        const components = await this.matchComponents(app, parsedUrl.pathname);\n        try {\n          let modules = [];\n          const C = renderToString(\n              <Loadable.Capture report={module => { modules.push(module); }} >\n                  <DApp context={{\n                    routesList: this.routesList,\n                    Document: this.Document,\n                    app\n                  }} />\n              </Loadable.Capture>\n          );\n          \n          let bundles = getBundles(this.clientBundles, modules);\n          \n          const html = renderToString(this.Document.renderDocument(this.Document,\n              {\n                  page: parsedUrl.pathname,\n                  files: [...bundles, ...this.entryFiles],\n                  children: C\n              }\n          )\n          )\n          return sendHTML(req, res, html);\n        } catch (err) {\n          if (err.code === 'DECODE_FAILED') {\n            res.statusCode = 400\n            return this.renderError(null, req, res, '/_error', {})\n          }\n          throw err\n        }\n    \n        // await this.render404(req, res, parsedUrl)\n    }\n\n    initDva({url}) {\n        // 初始化DvaApp\n        const history = createMemoryHistory();\n        history.push(url);\n        \n        // let initialState = this.initLocale(this.initialState);\n\n        this.app = dva({history, onError: e => {\n            console.log(e.message);\n        }});\n        this.app.router(router);\n\n        // if (initModel.length) {\n        //     initModel.forEach(model => {\n        //         registerModel(this.app, model);\n        //     });\n        // }\n    }  \n}"]}