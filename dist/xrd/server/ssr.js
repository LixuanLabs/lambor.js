"use strict";exports.__esModule=true;exports.default=void 0;var React=_interopRequireWildcard(require("react"));var Loadable=_interopRequireWildcard(require("react-loadable"));var _dva=_interopRequireDefault(require("dva"));var _history=require("history");var _reactRouterConfig=require("react-router-config");var _webpack=require("react-loadable/webpack");var _router=_interopRequireDefault(require("../router"));var _routes=require("../lib/routes");var _server=require("react-dom/server");var _utils=require("../lib/utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}class Ssr{constructor({dev,rootDir,distDir,Document,entryFiles,clientBundles}){this.matchComponents=async(app,pathname)=>{// 组件匹配（包含Loadable组件）
const components=[];const preload=[];(0,_reactRouterConfig.matchRoutes)(this.routesList,pathname).map(routers=>{const route=routers.route;const preloadFun=route.component['preload'];if(!preloadFun){components.push(route.component);}else{preload.push(preloadFun().then(res=>{if(res.default){components.push(res.default);}else{for(let i in res){if(res.hasOwnProperty(i)){if(res[i].default.hasOwnProperty('namespace')){(0,_utils.registerModel)(app,res[i]);}else{components.push(res[i].default);}}}}}));}});await Promise.all(preload).catch(e=>{console.log('matchComponents error:',e);});return components;};this.dispatchActions=async(app,components,parsedUrl)=>{// dispatch action
// 获取所有匹配组件的fetching方法
const fetchList=[];components.map(component=>{//tslint:disable-line
if(component.fetching){fetchList.push(component.fetching({...app._store,...component.props,isServerFetching:true,// 是否是服务端获取数据
query:parsedUrl.query,path:parsedUrl.pathname}));}});// 获取所有fetching方法中需要执行的action并过滤null
const actionList=[];fetchList.forEach(actions=>{(actions||[]).forEach(action=>{actionList.push(action);});});// 执行所有action
await Promise.all(actionList).catch(e=>{debug('dispatchActions error:',e.toString());});};this.prepare=async()=>{};this.dev=dev;this.rootDir=rootDir;this.distDir=distDir;this.Document=Document;this.entryFiles=entryFiles;this.clientBundles=clientBundles;this.Loadable=Loadable;this.routesList=(0,_routes.generateRoutes)();}async run(req,res,parsedUrl){this.initDva({url:req.url});const app=this.app;const DApp=app.start();console.log('parsedUrl',parsedUrl);const components=await this.matchComponents(app,parsedUrl.pathname);await this.dispatchActions(app,components,parsedUrl);try{let modules=[];const C=(0,_server.renderToString)(/*#__PURE__*/React.createElement(Loadable.Capture,{report:module=>{modules.push(module);}},/*#__PURE__*/React.createElement(DApp,{context:{routesList:this.routesList,Document:this.Document,app}})));let bundles=(0,_webpack.getBundles)(this.clientBundles,modules);const html=(0,_server.renderToString)(this.Document.renderDocument(this.Document,{page:parsedUrl.pathname,files:[...bundles,...this.entryFiles],children:C}));return(0,_utils.sendHTML)(req,res,html);}catch(err){if(err.code==='DECODE_FAILED'){res.statusCode=400;return this.renderError(null,req,res,'/_error',{});}throw err;}// await this.render404(req, res, parsedUrl)
}initDva({url}){// 初始化DvaApp
const history=(0,_history.createMemoryHistory)();history.push(url);// let initialState = this.initLocale(this.initialState);
this.app=(0,_dva.default)({history,onError:e=>{console.log(e.message);}});this.app.router(_router.default);// if (initModel.length) {
//     initModel.forEach(model => {
//         registerModel(this.app, model);
//     });
// }
}}exports.default=Ssr;