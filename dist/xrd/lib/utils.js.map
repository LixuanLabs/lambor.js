{"version":3,"sources":["utils.js"],"names":["printAndExit","message","code","console","log","error","process","exit","getNodeOptionsWithoutInspect","NODE_INSPECT_RE","env","NODE_OPTIONS","replace","hasNamespace","model","namespace","filter","item","length","registerModel","app","default","_models","registerModels","modelList","forEach","ESCAPE_LOOKUP","ESCAPE_REGEX","htmlEscapeJsonString","str","match","loadGetInitialProps","App","ctx","NODE_ENV","prototype","getInitialProps","getDisplayName","Error","res","Component","pageProps","props","isResSent","Object","keys","warn","sendHTML","req","html","getHeader","setHeader","Buffer","byteLength","end","method"],"mappings":"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","sourcesContent":["\nexport function printAndExit(message, code = 1) {\n    if (code === 0) {\n      // tslint:disable-next-line no-console\n      console.log(message)\n    } else {\n      console.error(message)\n    }\n  \n    process.exit(code)\n  }\n  \nexport function getNodeOptionsWithoutInspect() {\n  const NODE_INSPECT_RE = /--inspect(-brk)?(=\\S+)?( |$)/\n  return (process.env.NODE_OPTIONS || '').replace(NODE_INSPECT_RE, '')\n}\n\nfunction hasNamespace (model = [], namespace) {\n  return model.filter(item => {\n    return item.namespace === namespace;\n  }).length > 0;\n}\n\nexport function registerModel(app, model) {\n model = model.default || model;\n if (!hasNamespace(app._models, model.namespace)) {\n   app.model(model);\n }\n}\n\nexport function registerModels (app, modelList) {\n  modelList.forEach(model => {\n      registerModel(app, model);\n  });\n};\n\nconst ESCAPE_LOOKUP = {\n  '&': '\\\\u0026',\n  '>': '\\\\u003e',\n  '<': '\\\\u003c',\n  '\\u2028': '\\\\u2028',\n  '\\u2029': '\\\\u2029',\n}\n\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g\n\nexport function htmlEscapeJsonString(str) {\n  return str.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match])\n}\n\nexport async function loadGetInitialProps (App, ctx) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/ha.js/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {}\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/ha.js/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\n  \n\nexport function sendHTML(\n  req,\n  res,\n  html\n) {\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n  }\n  res.setHeader('Content-Length', Buffer.byteLength(html))\n  res.end(req.method === 'HEAD' ? null : html)\n}"]}