{"version":3,"sources":["compiler.js"],"names":["generateStats","result","stat","errors","warnings","toJson","length","push","devRunCompiler","clientConfig","serverConfig","clientDist","output","path","serverDist","multiCompiler","hotReloader","HotReloader","clientCompile","Promise","resolve","reject","compilers","hooks","done","tap","clientMFS","webpackDevMiddleware","fileSystem","entryFiles","JSON","parse","readFileSync","ENTRY_FILES","default","clientBundles","require","REACT_LOADABLE_MANIFEST","serverCompile","serverMFS","Document","DOCUMENTJS","Ssr","SERVEROUTPUT","mfs","error","console","log","runCompiler","config","dev","run","err","statsOrMultiStats","stats","reduce"],"mappings":"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","sourcesContent":["import webpack from 'webpack'\nimport path, { resolve } from 'path';\nimport requireFromString from 'require-from-string';\nimport { REACT_LOADABLE_MANIFEST, SERVER_DIRECTORY, DOCUMENTJS, ENTRY_FILES, SERVEROUTPUT } from '../lib/constants';\nimport HotReloader from './hot-reloader';\n\n\nfunction generateStats(result, stat) {\n  const { errors, warnings } = stat.toJson('errors-warnings')\n  if (errors.length > 0) {\n    result.errors.push(...errors)\n  }\n\n  if (warnings.length > 0) {\n    result.warnings.push(...warnings)\n  }\n\n  return result\n}\n\nexport async function devRunCompiler([clientConfig, serverConfig]) {\n  const clientDist = clientConfig.output.path;\n  const serverDist = serverConfig.output.path;\n  // const serverMFS = new MemoryFS();\n  // const clientCompiler = webpack(clientConfig);\n  // const serverCompiler = webpack(serverConfig);\n  // serverCompiler.outputFileSystem = serverMFS;\n  // const hotReloader = new HotReloader([clientCompiler, serverCompiler]);\n  const multiCompiler = webpack([clientConfig, serverConfig]);\n  try {\n    const hotReloader = new HotReloader(multiCompiler);\n    // multiCompiler.compilers[1].outputFileSystem = serverMFS;\n    function clientCompile() {\n      return new Promise((resolve, reject) => {\n        multiCompiler.compilers[0].hooks.done.tap('clientDone', () => {\n          // console.log('hotReloader.webpackDevMiddleware', hotReloader.webpackDevMiddleware.compiler);\n          const clientMFS = hotReloader.webpackDevMiddleware.fileSystem;\n          const entryFiles = JSON.parse(clientMFS.readFileSync(path.resolve(clientDist, ENTRY_FILES), 'utf-8')).default;\n          const clientBundles = require(path.resolve(clientDist, REACT_LOADABLE_MANIFEST));\n          resolve({\n            entryFiles,\n            clientBundles\n          });\n        })\n      })\n    }\n    function serverCompile() {\n      return new Promise((resolve, reject) => {\n        multiCompiler.compilers[1].hooks.done.tap('serverDone', () => {\n          const serverMFS = hotReloader.webpackDevMiddleware.fileSystem;\n          const Document = requireFromString(serverMFS.readFileSync(path.resolve(serverDist, DOCUMENTJS), 'utf-8')).default;\n          const Ssr = requireFromString(serverMFS.readFileSync(path.resolve(serverDist, SERVEROUTPUT), 'utf-8')).default;\n          resolve({\n            Document,\n            Ssr\n          })\n        })\n      })\n    }\n    const { entryFiles, clientBundles } = await clientCompile();\n    const { Document, Ssr } = await serverCompile();\n    return {\n      clientBundles,\n      Document,\n      entryFiles,\n      Ssr,\n      mfs: hotReloader.webpackDevMiddleware.fileSystem,\n      hotReloader\n    }  \n  } catch (error) {\n    console.log('error', error); \n  }\n}\n\nexport function runCompiler(\n  config,\n  {\n    dev = false\n  }\n) {\n  const multiCompiler = webpack(config)\n  return new Promise(async (resolve, reject) => {\n    multiCompiler.run(\n      (err, statsOrMultiStats) => {\n        if (err) {\n          return reject(err)\n        }\n\n        if ('stats' in statsOrMultiStats) {\n          const result = statsOrMultiStats.stats.reduce(\n            generateStats,\n            { errors: [], warnings: [] }\n          )\n          return resolve(result)\n        }\n\n        const result = generateStats(\n          { errors: [], warnings: [] },\n          statsOrMultiStats\n        )\n        return resolve(result)\n      }\n    )\n  })\n}\n"]}