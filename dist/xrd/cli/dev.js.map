{"version":3,"sources":["dev.js"],"names":["haDev","argv","args","Boolean","Number","String","console","log","process","exit","dir","_","port","dev","then","app","catch","err","error"],"mappings":"AAAA;4DACA,0BACA,sBACA,gDACA,2EACA,mC,mFAEA,KAAMA,CAAAA,KAAK,CAAIC,IAAD,EAAU,CACpB,KAAMC,CAAAA,IAAI,CAAG,iBACT,CACE;AACA,SAAUC,OAFZ,CAGE,SAAUC,MAHZ,CAIE,aAAcC,MAJhB,CAME;AACA,KAAM,QAPR,CAQE,KAAM,QARR,CASE,KAAM,YATR,CADS,CAYT,CAAEJ,IAAF,CAZS,CAAb,CAeE,GAAIC,IAAI,CAAC,QAAD,CAAR,CAAoB,CAClB;AACAI,OAAO,CAACC,GAAR,CAAa;;;;;;;SAAb,EAQAC,OAAO,CAACC,IAAR,CAAa,CAAb,EACD,CAED,KAAMC,CAAAA,GAAG,CAAG,kBAAQR,IAAI,CAACS,CAAL,CAAO,CAAP,GAAa,GAArB,CAAZ,CAEA;AACA,GAAI,CAAC,mBAAWD,GAAX,CAAL,CAAsB,CACpB,wBAAc,mDAAkDA,GAAI,EAApE,EACD,CAED,KAAME,CAAAA,IAAI,CAAGV,IAAI,CAAC,QAAD,CAAJ,EAAkB,IAA/B,CACA,yBAAY,CAAEQ,GAAF,CAAOG,GAAG,CAAE,IAAZ,CAAZ,CAAgCD,IAAhC,CAAsCV,IAAI,CAAC,YAAD,CAA1C,EACGY,IADH,CACQ,KAAOC,CAAAA,GAAP,EAAe,CACnB;AACAT,OAAO,CAACC,GAAR,CACG,4BAA2BL,IAAI,CAAC,YAAD,CAAJ,EAAsB,WAAY,IAAGU,IAAK,EADxE,EAGD,CANH,EAOGI,KAPH,CAOUC,GAAD,EAAS,CACd;AACAX,OAAO,CAACY,KAAR,CAAcD,GAAd,EACAT,OAAO,CAACC,IAAR,CAAa,CAAb,EACD,CAXH,EAaL,CAlDD,C,aAoDeT,K","sourcesContent":["#!/usr/bin/env node\nimport { resolve } from 'path';\nimport { existsSync } from 'fs';\nimport arg from 'arg';\nimport startServer from '../server/start-server'\nimport { printAndExit } from '../lib/utils';\n\nconst haDev = (argv) => {\n    const args = arg(\n        {\n          // Types\n          '--help': Boolean,\n          '--port': Number,\n          '--hostname': String,\n    \n          // Aliases\n          '-h': '--help',\n          '-p': '--port',\n          '-H': '--hostname',\n        },\n        { argv }\n      )\n    \n      if (args['--help']) {\n        // tslint:disable-next-line\n        console.log(`\n        Description\n          Starts the application in development mode (hot-code reloading, error\n          reporting, etc)\n  \n        Usage\n          $ xrd dev\n        `)\n        process.exit(0)\n      }\n    \n      const dir = resolve(args._[0] || '.')\n    \n      // Check if pages dir exists and warn if not\n      if (!existsSync(dir)) {\n        printAndExit(`> No such directory exists as the project root: ${dir}`)\n      }\n    \n      const port = args['--port'] || 3000\n      startServer({ dir, dev: true }, port, args['--hostname'])\n        .then(async (app) => {\n          // tslint:disable-next-line\n          console.log(\n            `started server on http://${args['--hostname'] || 'localhost'}:${port}`\n          )\n        })\n        .catch((err) => {\n          // tslint:disable-next-line\n          console.error(err)\n          process.exit(1)\n        })\n    \n}\n\nexport default haDev"]}