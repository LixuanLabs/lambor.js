{"version":3,"sources":["index.js"],"names":["args","Boolean","permissive","console","log","commands","defaultCommand","foundCommand","_","command","forwardedArgs","slice","defaultEnv","process","env","NODE_ENV","then","exec"],"mappings":"AAAA;aACA,gD,mFACA;AACA;AAEA,KAAMA,CAAAA,IAAI,CAAG,iBACT,CACI;AACA,YAAaC,OAFjB,CAGI,SAAUA,OAHd,CAII,YAAaA,OAJjB,CAMI;AACA,KAAM,WAPV,CAQI,KAAM,QARV,CADS,CAWT,CACIC,UAAU,CAAE,IADhB,CAXS,CAAb,CAgBAC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBJ,IAAtB,EAGA,KAAMK,CAAAA,QAAQ,CAAG,CACb;AACA;AAFa,CAAjB,CAKA,KAAMC,CAAAA,cAAc,CAAG,KAAvB,CACA,KAAMC,CAAAA,YAAY,CAAGN,OAAO,CAACI,QAAQ,CAACL,IAAI,CAACQ,CAAL,CAAO,CAAP,CAAD,CAAT,CAA5B,CAEA,KAAMC,CAAAA,OAAO,CAAGF,YAAY,CAAGP,IAAI,CAACQ,CAAL,CAAO,CAAP,CAAH,CAAeF,cAA3C,CACA,KAAMI,CAAAA,aAAa,CAAGH,YAAY,CAAGP,IAAI,CAACQ,CAAL,CAAOG,KAAP,CAAa,CAAb,CAAH,CAAqBX,IAAI,CAACQ,CAA5D,CACA,KAAMI,CAAAA,UAAU,CAAGH,OAAO,GAAK,KAAZ,CAAoB,aAApB,CAAoC,YAAvD,CAEAI,OAAO,CAACC,GAAR,CAAYC,QAAZ,CAAuBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAAwBH,UAA/C,CAEAP,QAAQ,CAACI,OAAD,CAAR,GAAoBO,IAApB,CAA0BC,IAAD,EAAUA,IAAI,CAACP,aAAD,CAAvC","sourcesContent":["#!/usr/bin/env node\nimport arg from 'arg';\n// import comBuild from './cli/build';\n// import comDev from './cli/dev';\n\nconst args = arg(\n    {\n        // Types\n        '--version': Boolean,\n        '--help': Boolean,\n        '--inspect': Boolean,\n    \n        // Aliases\n        '-v': '--version',\n        '-h': '--help',\n    },\n    {\n        permissive: true,\n    }\n\n);\nconsole.log('args=>', args);\n\n\nconst commands = {\n    // build: comBuild,\n    // dev: comDev\n}\n\nconst defaultCommand = 'dev';\nconst foundCommand = Boolean(commands[args._[0]]);\n\nconst command = foundCommand ? args._[0] : defaultCommand;\nconst forwardedArgs = foundCommand ? args._.slice(1) : args._;\nconst defaultEnv = command === 'dev' ? 'development' : 'production';\n\nprocess.env.NODE_ENV = process.env.NODE_ENV || defaultEnv\n\ncommands[command]().then((exec) => exec(forwardedArgs))\n\n\n"]}