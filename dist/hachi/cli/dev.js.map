{"version":3,"sources":["dev.js"],"names":["hachiDev","argv","args","Boolean","Number","String","console","log","process","exit","dir","_","port","appUrl"],"mappings":"AAAA;4DACA,0BACA,sBACA,gDACA,mC,mFAEA,KAAMA,CAAAA,QAAQ,CAAIC,IAAD,EAAU,CACvB,KAAMC,CAAAA,IAAI,CAAG,iBACT,CACE;AACA,SAAUC,OAFZ,CAGE,SAAUC,MAHZ,CAIE,aAAcC,MAJhB,CAME;AACA,KAAM,QAPR,CAQE,KAAM,QARR,CASE,KAAM,YATR,CADS,CAYT,CAAEJ,IAAF,CAZS,CAAb,CAeE,GAAIC,IAAI,CAAC,QAAD,CAAR,CAAoB,CAClB;AACAI,OAAO,CAACC,GAAR,CAAa;;;;;;;;;;;;;;;SAAb,EAgBAC,OAAO,CAACC,IAAR,CAAa,CAAb,EACD,CAED,KAAMC,CAAAA,GAAG,CAAG,kBAAQR,IAAI,CAACS,CAAL,CAAO,CAAP,GAAa,GAArB,CAAZ,CAEA;AACA,GAAI,CAAC,mBAAWD,GAAX,CAAL,CAAsB,CACpB,wBAAc,mDAAkDA,GAAI,EAApE,EACD,CAED,KAAME,CAAAA,IAAI,CAAGV,IAAI,CAAC,QAAD,CAAJ,EAAkB,IAA/B,CACA,KAAMW,CAAAA,MAAM,CAAI,UAASX,IAAI,CAAC,YAAD,CAAJ,EAAsB,WAAY,IAAGU,IAAK,EAAnE,CAEL,CA/CD,C,aAiDeZ,Q","sourcesContent":["#!/usr/bin/env node\nimport { resolve } from 'path';\nimport { existsSync } from 'fs';\nimport arg from 'arg';\nimport { printAndExit } from '../lib/utils';\n\nconst hachiDev = (argv) => {\n    const args = arg(\n        {\n          // Types\n          '--help': Boolean,\n          '--port': Number,\n          '--hostname': String,\n    \n          // Aliases\n          '-h': '--help',\n          '-p': '--port',\n          '-H': '--hostname',\n        },\n        { argv }\n      )\n    \n      if (args['--help']) {\n        // tslint:disable-next-line\n        console.log(`\n          Description\n            Starts the application in development mode (hot-code reloading, error\n            reporting, etc)\n    \n          Usage\n            $ next dev <dir> -p <port number>\n    \n          <dir> represents the directory of the Next.js application.\n          If no directory is provided, the current directory will be used.\n    \n          Options\n            --port, -p      A port number on which to start the application\n            --hostname, -H  Hostname on which to start the application\n            --help, -h      Displays this message\n        `)\n        process.exit(0)\n      }\n    \n      const dir = resolve(args._[0] || '.')\n    \n      // Check if pages dir exists and warn if not\n      if (!existsSync(dir)) {\n        printAndExit(`> No such directory exists as the project root: ${dir}`)\n      }\n    \n      const port = args['--port'] || 3000\n      const appUrl = `http://${args['--hostname'] || 'localhost'}:${port}`\n    \n}\n\nexport default hachiDev"]}