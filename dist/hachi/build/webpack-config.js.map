{"version":3,"sources":["webpack-config.js"],"names":["path","require","babelClientOpts","babelServerOpts","ReactLoadablePlugin","REACT_LOADABLE_MANIFEST","getBaseWebpackConfig","dir","config","target","entrypoints","distDir","join","outputPath","entry","output","filename","publicPath","resolve","extensions","externals","module","rules","test","exclude","use","loader","options","name","plugins","optimization","splitChunks","maxAsyncRequests","cacheGroups","vendor","chunks","priority","enforce","ant","runtimeChunk"],"mappings":"0EAAA,KAAMA,CAAAA,IAAI,CAAGC,OAAO,CAAC,MAAD,CAApB,CACA,KAAM,CAACC,eAAD,CAAkBC,eAAlB,EAAqCF,OAAO,CAAC,gBAAD,CAAlD,CACA,KAAM,CAAEG,mBAAF,EAA0BH,OAAO,CAAC,wBAAD,CAAvC,CACA,KAAM,CAAEI,uBAAF,EAA8BJ,OAAO,CAAC,kBAAD,CAA3C,CAEe,cAAeK,CAAAA,oBAAf,CACXC,GADW,CAEX,CACIC,MADJ,CAEIC,MAAM,CAAG,QAFb,CAGIC,WAHJ,CAFW,CAOb,CACE,KAAMC,CAAAA,OAAO,CAAGX,IAAI,CAACY,IAAL,CAAUL,GAAV,CAAeC,MAAM,CAACG,OAAtB,CAAhB,CACA,KAAME,CAAAA,UAAU,CAAGb,IAAI,CAACY,IAAL,CAAUD,OAAV,CAAmBF,MAAM,GAAK,QAAX,CAAsB,QAAtB,CAAiC,EAApD,CAAnB,CACA,MAAO,CACHK,KAAK,CAAE,CACH,GAAGJ,WADA,CADJ,CAIHK,MAAM,CAAE,CACJf,IAAI,CAAEa,UADF,CAEJG,QAAQ,CAAE,cAFN,CAGJC,UAAU,CAAE,QAHR,CAJL,CASHC,OAAO,CAAE,CACL;AACAC,UAAU,CAAE,CAAC,KAAD,CAAQ,MAAR,CAAgB,KAAhB,CAAuB,MAAvB,CAA+B,OAA/B,CAFP,CATN,CAaHC,SAAS,CAAE,EAbR,CAeHC,MAAM,CAAE,CACJC,KAAK,CAAE,CAAC,CACAC,IAAI,CAAE,OADN,CAEAC,OAAO,CAAE,CAAC,gEAAD,CAFT,CAGAC,GAAG,CAAE,CACD,eADC,CAED,CACIC,MAAM,CAAE,cADZ,CAEIC,OAAO,CAAElB,MAAM,GAAK,QAAX,CAAsBN,eAAtB,CAAwCD,eAFrD,CAFC,CAHL,CAAD,CAUA,CACCqB,IAAI,CAAE,sBADP,CAECG,MAAM,CAAE,aAFT,CAGCC,OAAO,CAAE,CACLC,IAAI,CAAE,2BADD,CAHV,CAVA,CAgBA,CACCL,IAAI,CAAE,oCADP,CAECG,MAAM,CAAE,aAFT,CAGCC,OAAO,CAAE,CACLC,IAAI,CAAE,6BADD,CAHV,CAhBA,CADH,CAfL,CAwCHC,OAAO,CAAE,CACLpB,MAAM,GAAK,QAAX,EACI,GAAIL,CAAAA,mBAAJ,CAAwB,CACpBY,QAAQ,CAAEX,uBADU,CAAxB,CAFC,CAxCN,CA8CHyB,YAAY,CAAE,CACVC,WAAW,CAAE,CACTC,gBAAgB,CAAE,CADT,CAETC,WAAW,CAAE,CACTC,MAAM,CAAE,CACJX,IAAI,CAAE,wCADF,CAEJY,MAAM,CAAE,KAFJ,CAGJP,IAAI,CAAE,QAHF,CAIJQ,QAAQ,CAAE,EAJN,CAKJC,OAAO,CAAE,IALL,CADC,CAQTC,GAAG,CAAE,CACDf,IAAI,CAAE,kCADL,CAEDY,MAAM,CAAE,KAFP,CAGDP,IAAI,CAAE,KAHL,CAIDQ,QAAQ,CAAE,EAJT,CAKDC,OAAO,CAAE,IALR,CARI,CAFJ,CADH,CAoBVE,YAAY,CAAE,CACVX,IAAI,CAAE,UADI,CApBJ,CA9CX,CAAP,CAuEH","sourcesContent":["const path = require('path');\nconst {babelClientOpts, babelServerOpts} = require('./babel-config');\nconst { ReactLoadablePlugin } = require('react-loadable/webpack');\nconst { REACT_LOADABLE_MANIFEST } = require('../lib/constants');\n\nexport default async function getBaseWebpackConfig(\n    dir,\n    {\n        config,\n        target = 'server',\n        entrypoints\n    }\n) {\n    const distDir = path.join(dir, config.distDir)\n    const outputPath = path.join(distDir, target === 'server' ? 'server' : '')\n    return {\n        entry: {\n            ...entrypoints\n        },\n        output: {\n            path: outputPath,\n            filename: 'js/[name].js',\n            publicPath: '/dist/'\n        },\n        resolve: {\n            // alias: getAlias(),\n            extensions: ['.ts', '.tsx', '.js', '.jsx', '.json'],\n        },\n        externals: {\n        },\n        module: {\n            rules: [{\n                    test: /\\.js$/,\n                    exclude: [/node_modules\\/(?!(react-dnd|dnd-core|react-dnd-html5-backend))/],\n                    use: [\n                        'thread-loader',\n                        {\n                            loader: 'babel-loader',\n                            options: target === 'server' ? babelServerOpts : babelClientOpts\n                        },\n                    ]\n                }, {\n                    test: /\\.(png|jpg|gif|ico)$/,\n                    loader: 'file-loader',\n                    options: {\n                        name: 'img/[name].[hash:7].[ext]'\n                    }\n                }, {\n                    test: /\\.(woff|eot|ttf|woff2|svg)(\\?.*)?$/,\n                    loader: 'file-loader',\n                    options: {\n                        name: 'fonts/[name].[hash:7].[ext]'\n                    }\n                }]\n        },\n        plugins: [\n            target === 'server' &&\n                new ReactLoadablePlugin({\n                    filename: REACT_LOADABLE_MANIFEST,\n                }),\n        ],\n        optimization: {\n            splitChunks: {\n                maxAsyncRequests: 1,\n                cacheGroups: {\n                    vendor: {\n                        test: /node_modules(?!(\\/(@ant-design|antd)))/,\n                        chunks: \"all\",\n                        name: \"vendor\",\n                        priority: 10,\n                        enforce: true,\n                    },\n                    ant: {\n                        test: /node_modules\\/(@ant-design|antd)/,\n                        chunks: \"all\",\n                        name: \"ant\",\n                        priority: 12,\n                        enforce: true\n                    }\n                }\n            },\n            runtimeChunk: {\n                name: 'manifest'\n            }\n        },\n    }\n}"]}