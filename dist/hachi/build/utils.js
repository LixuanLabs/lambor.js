"use strict";exports.__esModule=true;exports.findPagesMapDir=findPagesMapDir;exports.collectPages=collectPages;var _path=_interopRequireDefault(require("path"));var _fs=require("fs");var _constants=require("../lib/constants");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function findPagesMapDir(dir){let curDir=_path.default.join(dir,'routes.json');if((0,_fs.existsSync)(curDir))return curDir;curDir=_path.default.join(dir,'src/routes.json');if((0,_fs.existsSync)(curDir))return curDir;// Check one level up the tree to see if the pages directory might be there
if((0,_fs.existsSync)(_path.default.join(dir,'..','pages'))){throw new Error('> No `pages` directory found. Did you mean to run `hachi` in the parent (`../`) directory?');}throw new Error("> Couldn't find a `routes.json` file. Please create one under the project root");}async function collectPages(pagesMapDir){const pagesMap=require(pagesMapDir);const obj={};Object.keys(pagesMap).map(key=>{obj[key+'/aModel']=pagesMap[key]+'aModel.js';obj[key+'/aIndex']=pagesMap[key]+'aIndex.js';obj[key+'/aLang']=pagesMap[key]+'aLang.js';});return obj;}