{"version":3,"sources":["entries.ts"],"names":["createPagesMapping","pagePaths","extensions","previousPages","pages","reduce","result","pagePath","page","replace","RegExp","join","pageKey","warn","chalk","cyan","PAGES_DIR_ALIAS","createEntrypoints","dev","target","config","client","server","Object","keys","forEach","absolutePagePath","bundleFile","isApiRoute","match","API_ROUTE","bundlePath"],"mappings":"+HAAA,oDACA,0BAEA,2C,mFAGO,QAASA,CAAAA,kBAAT,CACLC,SADK,CAELC,UAFK,CAGL,CACA,KAAMC,CAAAA,aAAa,CAAG,EAAtB,CACA,KAAMC,CAAAA,KAAK,CAAGH,SAAS,CAACI,MAAV,CACZ,CAACC,MAAD,CAASC,QAAT,GAAsB,CACpB,GAAIC,CAAAA,IAAI,CAAI,GAAED,QAAQ,CACnBE,OADW,CACH,GAAIC,CAAAA,MAAJ,CAAY,QAAOR,UAAU,CAACS,IAAX,CAAgB,GAAhB,CAAqB,IAAxC,CADG,CAC2C,EAD3C,EAEXF,OAFW,CAEH,KAFG,CAEI,GAFJ,CAES,EAFZ,CAEcA,OAFd,CAEsB,UAFtB,CAEkC,EAFlC,CAAX,CAGAD,IAAI,CAAGA,IAAI,GAAK,QAAT,CAAoB,GAApB,CAA0BA,IAAjC,CAEA,KAAMI,CAAAA,OAAO,CAAGJ,IAAI,GAAK,EAAT,CAAc,GAAd,CAAoBA,IAApC,CAEA,GAAII,OAAO,GAAIN,CAAAA,MAAf,CAAuB,CACrBO,IAAI,CACD,4BAA2BC,eAAMC,IAAN,CAC1B,eAAK,OAAL,CAAcZ,aAAa,CAACS,OAAD,CAA3B,CAD0B,CAE1B,QAAOE,eAAMC,IAAN,CACP,eAAK,OAAL,CAAcR,QAAd,CADO,CAEP,oBAAmBO,eAAMC,IAAN,CAAWH,OAAX,CAAoB,GALvC,CAAJ,CAOD,CARD,IAQO,CACLT,aAAa,CAACS,OAAD,CAAb,CAAyBL,QAAzB,CACD,CACDD,MAAM,CAACM,OAAD,CAAN,CAAkB,eAAKI,0BAAL,CAAsBT,QAAtB,EAAgCE,OAAhC,CAAwC,KAAxC,CAA+C,GAA/C,CAAlB,CACA,MAAOH,CAAAA,MAAP,CACD,CAtBW,CAuBZ,EAvBY,CAAd,CA0BAF,KAAK,CAAC,OAAD,CAAL,CAAiBA,KAAK,CAAC,OAAD,CAAL,EAAkB,sBAAnC,CACAA,KAAK,CAAC,SAAD,CAAL,CAAmBA,KAAK,CAAC,SAAD,CAAL,EAAoB,wBAAvC,CACAA,KAAK,CAAC,YAAD,CAAL,CAAsBA,KAAK,CAAC,YAAD,CAAL,EAAuB,2BAA7C,CAEA,MAAOA,CAAAA,KAAP,CACD,CAEM,QAASa,CAAAA,iBAAT,CACLC,GADK,CAELd,KAFK,CAGLe,MAHK,CAILC,MAJK,CAKL,CACA,KAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,KAAMC,CAAAA,MAAM,CAAG,EAAf,CAEAC,MAAM,CAACC,IAAP,CAAYpB,KAAZ,EAAmBqB,OAAnB,CAA4BjB,IAAD,EAAU,CACnC,KAAMkB,CAAAA,gBAAgB,CAAGtB,KAAK,CAACI,IAAD,CAA9B,CACA,KAAMmB,CAAAA,UAAU,CAAGD,gBAAnB,CACA,KAAME,CAAAA,UAAU,CAAGpB,IAAI,CAACqB,KAAL,CAAWC,oBAAX,CAAnB,CAEA,KAAMC,CAAAA,UAAU,CAAG,eAAK,QAAL,CAAe,OAAf,CAAwBJ,UAAxB,CAAnB,CAEA,GAAIC,UAAU,EAAIT,MAAM,GAAK,QAA7B,CAAuC,CACrCG,MAAM,CAACS,UAAD,CAAN,CAAqB,CAACL,gBAAD,CAArB,CACAL,MAAM,CAACU,UAAD,CAAN,CAAqB,CAACL,gBAAD,CAArB,CACD,CAED;AACA;AACA;AACD,CAfD,EAiBA,MAAO,CACLL,MADK,CAELC,MAFK,CAAP,CAID","sourcesContent":["import chalk from 'chalk'\nimport { join } from 'path'\nimport { stringify } from 'querystring'\nimport { API_ROUTE, DOT_NEXT_ALIAS, PAGES_DIR_ALIAS } from '../lib/constants'\n\n\nexport function createPagesMapping(\n  pagePaths: string[],\n  extensions: string[]\n) {\n  const previousPages = {}\n  const pages = pagePaths.reduce(\n    (result, pagePath) => {\n      let page = `${pagePath\n        .replace(new RegExp(`\\\\.+(${extensions.join('|')})$`), '')\n        .replace(/\\\\/g, '/')}`.replace(/\\/index$/, '')\n      page = page === '/index' ? '/' : page\n\n      const pageKey = page === '' ? '/' : page\n\n      if (pageKey in result) {\n        warn(\n          `Duplicate page detected. ${chalk.cyan(\n            join('pages', previousPages[pageKey])\n          )} and ${chalk.cyan(\n            join('pages', pagePath)\n          )} both resolve to ${chalk.cyan(pageKey)}.`\n        )\n      } else {\n        previousPages[pageKey] = pagePath\n      }\n      result[pageKey] = join(PAGES_DIR_ALIAS, pagePath).replace(/\\\\/g, '/')\n      return result\n    },\n    {}\n  )\n\n  pages['/_app'] = pages['/_app'] || 'next/dist/pages/_app'\n  pages['/_error'] = pages['/_error'] || 'next/dist/pages/_error'\n  pages['/_document'] = pages['/_document'] || 'next/dist/pages/_document'\n\n  return pages\n}\n\nexport function createEntrypoints(\n  dev,\n  pages,\n  target,\n  config\n) {\n  const client = {}\n  const server = {}\n\n  Object.keys(pages).forEach((page) => {\n    const absolutePagePath = pages[page]\n    const bundleFile = absolutePagePath\n    const isApiRoute = page.match(API_ROUTE)\n\n    const bundlePath = join('static', 'pages', bundleFile)\n\n    if (isApiRoute || target === 'server') {\n      server[bundlePath] = [absolutePagePath]\n      client[bundlePath] = [absolutePagePath]\n    } \n\n    // if (page === '/_document') {\n    //   return\n    // }\n  })\n\n  return {\n    client,\n    server,\n  }\n}\n"]}