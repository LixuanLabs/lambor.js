{"version":3,"sources":["config.js"],"names":["loadConfig","dir","customConfig","assignDefaults","configOrigin","path","findUp","sync","CONFIG_FILE","cwd","userConfigModule","require","userConfig","normalizeConfig","default","Object","keys","length","console","warn","chalk","yellow","bold","defaultConfig","forEach","key","distDir","userDistDir","trim","Error","pageExtensions","undefined","Array","isArray","ext","maybeObject","constructor","result","assetPrefix","target","apiReg","config"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport { CONFIG_FILE } from '../lib/constants'\nimport findUp from 'find-up';\n\nexport default function loadConfig(dir, customConfig) {\n    if (customConfig) {\n        return assignDefaults({ configOrigin: 'server', ...customConfig })\n    }\n    const path = findUp.sync(CONFIG_FILE, {\n        cwd: dir,\n    })\n    // If config file was found\n    if (path) {\n        const userConfigModule = require(path)\n        const userConfig = normalizeConfig(\n            userConfigModule.default || userConfigModule\n        )\n        if (Object.keys(userConfig).length === 0) {\n            console.warn(\n              chalk.yellow.bold('Warning: ') +\n                'Detected next.config.js, no exported configuration found. https://err.sh/zeit/next.js/empty-configuration'\n            )\n        }\n        return assignDefaults({ configOrigin: CONFIG_FILE, ...userConfig })\n    }\n    return defaultConfig\n}\n\nfunction assignDefaults(userConfig) {\n    Object.keys(userConfig).forEach((key) => {\n  \n      if (key === 'distDir') {\n        if (typeof userConfig[key] !== 'string') {\n          userConfig[key] = defaultConfig.distDir\n        }\n        const userDistDir = userConfig[key].trim()\n  \n        // don't allow public as the distDir as this is a reserved folder for\n        // public files\n        if (userDistDir === 'public') {\n          throw new Error(\n            `The 'public' directory is reserved in Next.js and can not be set as the 'distDir'. https://err.sh/zeit/next.js/can-not-output-to-public`\n          )\n        }\n        // make sure distDir isn't an empty string as it can result in the provided\n        // directory being deleted in development mode\n        if (userDistDir.length === 0) {\n          throw new Error(\n            `Invalid distDir provided, distDir can not be an empty string. Please remove this config or set it to undefined`\n          )\n        }\n      }\n  \n      if (key === 'pageExtensions') {\n        const pageExtensions = userConfig[key]\n  \n        if (pageExtensions === undefined) {\n          delete userConfig[key]\n          return\n        }\n  \n        if (!Array.isArray(pageExtensions)) {\n          throw new Error(\n            `Specified pageExtensions is not an array of strings, found \"${pageExtensions}\". Please update this config or remove it.`\n          )\n        }\n  \n        if (!pageExtensions.length) {\n          throw new Error(\n            `Specified pageExtensions is an empty array. Please update it with the relevant extensions or remove it.`\n          )\n        }\n  \n        pageExtensions.forEach((ext) => {\n          if (typeof ext !== 'string') {\n            throw new Error(\n              `Specified pageExtensions is not an array of strings, found \"${ext}\" of type \"${typeof ext}\". Please update this config or remove it.`\n            )\n          }\n        })\n      }\n  \n      const maybeObject = userConfig[key]\n      if (!!maybeObject && maybeObject.constructor === Object) {\n        userConfig[key] = {\n          ...(defaultConfig[key] || {}),\n          ...userConfig[key],\n        }\n      }\n    })\n  \n    const result = { ...defaultConfig, ...userConfig }\n  \n    if (typeof result.assetPrefix !== 'string') {\n      throw new Error(\n        `Specified assetPrefix is not a string, found type \"${typeof result.assetPrefix}\" https://err.sh/zeit/next.js/invalid-assetprefix`\n      )\n    }\n    return result\n}\n\nconst defaultConfig = {\n    distDir: '.hachi',\n    pageExtensions: ['tsx', 'ts', 'jsx', 'js'],\n    target: 'server',\n    assetPrefix: '',\n    apiReg: /^\\/api(?:\\/|$)/\n}\n\nexport function normalizeConfig(config) {\n    if (typeof config === 'function') {\n      config = config({ defaultConfig })\n    }\n    return config\n}"]}